language: minimal
dist: xenial

addons:
    ssh_known_hosts: c4dtsrv1.epfl.ch

stages:
    - lint
    - build
    - name: deploy
      if: branch = master

jobs:
    include:
        - stage: lint
          language: node_js
          node_js: 10
          install: cd webapp && npm ci
          script: ng lint
        - language: go
          go: 1.12.x
          script:
            - cd backend
            - if test $( gofmt -d . | tee gofmt.results | wc -l ) -ne 0; then cat gofmt.results; exit 1; fi
            - go get -u golang.org/x/lint/golint
            - golint -set_exit_status ./...

        - stage: build
          language: go
          go: 1.12.x
          script:
              - make webapp-build
              - echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin
              - docker push c4dt/service-stainless-backend:latest
              - tar -C ./webapp --xz --create --file -  --exclude '*.toml' ./dist | ssh stainless@c4dtsrv1.epfl.ch '(rm -rf build; mkdir build; cat > build/dist.tar.xz)'
          before_install:
              - wget https://github.com/protocolbuffers/protobuf/releases/download/v3.9.1/protoc-3.9.1-linux-x86_64.zip -O /tmp/protoc.zip
              - unzip /tmp/protoc.zip -d /tmp bin/protoc
              - export PATH=${PATH}:/tmp/bin
              - echo "$DEPLOY_SSH_KEY" > "$HOME/.ssh/id_rsa"
              - chmod 600 "$HOME/.ssh/id_rsa"

        - stage: deploy
          install: skip
          script: skip
          before_deploy:
              - echo "$DEPLOY_SSH_KEY" > "$HOME/.ssh/id_rsa"
              - chmod 600 "$HOME/.ssh/id_rsa"
          deploy:
              provider: script
              script: rsync -av --delete ./scripts stainless@c4dtsrv1.epfl.ch:. && ssh stainless@c4dtsrv1.epfl.ch bash --login scripts/deploy.sh

notifications:
    email: false
